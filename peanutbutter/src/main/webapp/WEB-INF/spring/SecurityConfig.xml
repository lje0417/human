<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


   <!-- 스프링 시큐리티의 HTTP 보안 설정 시작 -->
   <http auto-config="true" use-expressions="true">
      <!-- CSRF 보안 비활성화 (테스트나 간단한 애플리케이션에서는 비활성화할 수 있지만, 실제 운영 환경에서는 활성화하는 것이 
         권장됨) -->
      <csrf disabled="true" />

      <!-- 로그인 페이지를 모든 사용자에게 허용 -->
      <intercept-url pattern="/login" access="permitAll" />


      <!-- /user/** 경로는 사용자 권한이 있는 사용자만 접근 가능 -->
      <intercept-url pattern="/user/**"
         access="hasRole('ROLE_USER')" />

      <!-- 로그인 폼 페이지와 로그인 성공 시, 실패 시 이동할 URL을 설정 -->
      <!-- 사용자 정의 로그인 페이지 경로 -->
      <!-- 로그인 성공 후 이동할 기본 URL -->
      <form-login login-page="/login"
         login-processing-url="/j_spring_security_check"
         default-target-url="/admin"
         authentication-failure-url="/login?error=false"
         username-parameter="id"
         password-parameter="pw" />

      <!-- 세션 관리 설정 -->
       <session-management invalid-session-url="/login">
           <concurrency-control max-sessions="1" expired-url="/login?expired=true" />
       </session-management>

      <!-- 로그아웃 설정: 로그아웃 URL과 로그아웃 성공 후 이동할 URL 설정 -->
      <!-- 로그아웃 요청 URL -->
      <!-- 로그아웃 성공 시 이동할 URL -->
      <logout logout-url="/logout" logout-success-url="/login?logout" />
   </http>

   <!-- 인증 제공자를 설정하는 매니저 -->
   <authentication-manager>
      <authentication-provider>
         <!-- 비밀번호 암호화를 처리하는 password-encoder -->
         <password-encoder ref="passwordEncoder" />

         <!-- 사용자 정보를 데이터베이스에서 가져오는 설정 (users와 authorities 테이블에서 조회) -->
         <!-- DataSource 설정 참조 -->
         <!-- 사용자 정보를 가져오는 쿼리 -->
         <!-- 권한 정보를 가져오는 쿼리 -->
         <jdbc-user-service data-source-ref="dataSource"
            users-by-username-query="SELECT user_id, password, enabled FROM emp WHERE user_id=?"
            authorities-by-username-query="SELECT username, position FROM authorities WHERE username=?" />
      </authentication-provider>
   </authentication-manager>

   <!-- 비밀번호를 암호화하는 BCryptPasswordEncoder 빈 설정 -->
   <beans:bean id="passwordEncoder"
      class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

   <!-- 데이터베이스 연결을 위한 DataSource 설정 (여기서는 Oracle DB 예시) -->
   <beans:bean id="dataSource"
      class="org.apache.commons.dbcp.BasicDataSource">
      <beans:property name="driverClassName"
         value="oracle.jdbc.driver.OracleDriver" />  <!-- 오라클 JDBC 드라이버 클래스 -->
      <beans:property name="url"
         value="jdbc:oracle:thin:@125.181.132.133:51521:XE" />  <!-- 오라클 DB 연결 URL -->
      <beans:property name="username" value="scott2_3" />  <!-- DB 사용자명 -->
      <beans:property name="password" value="tiger" />  <!-- DB 비밀번호 -->
   </beans:bean>

</beans:beans>
