<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.emp">
	
	<select id="selectpmPage" resultType="pmDTO" parameterType="map">
		SELECT *
FROM (
    SELECT rownum AS rnum, 
           Product_Code, 
           Product_Name, 
           Product_Image, 
           Unit, 
           Standard, 
           Lead_Time, 
           Barcode, 
           Lot_Size, 
           Shipping_Warehouse
    FROM (
        SELECT Product_Code, 
               Product_Name, 
               Product_Image, 
               Unit, 
               Standard, 
               Lead_Time, 
               Barcode, 
               Lot_Size, 
               Shipping_Warehouse
        FROM TABLE_PM
        <where>
        	<if test="'code' == optionvalue">
        	Product_Code like '%' || #{search} || '%'
        	</if>
        	<if test="'name' == optionvalue">
        	Product_Name like '%' || #{search} || '%'
        	</if>
        </where>
        ORDER BY Product_Code
    )
)
WHERE rnum <![CDATA[ >= ]]>  #{start} AND rnum  <![CDATA[ <= ]]> #{end}
	</select>
	
	<select id="totalpmPage" resultType="int">
		select count(*) cnt from TABLE_PM
	</select>
	
	<select id="selectSequence" resultType="long">
		SELECT SEQ_PM_SEQUENCE.NEXTVAL FROM dual
	</select>
	
	<insert id="insertPM" parameterType="pmDTO">
		INSERT INTO TABLE_PM (Product_Code, Product_Name, Product_Image, Unit, Standard, Lead_Time, Barcode, Lot_Size, Shipping_Warehouse)
		VALUES (
		#{product_code},
		#{product_name},
		#{product_image},
		#{unit},
		#{standard},
		#{lead_time},
		#{barcode},
		#{lot_size},
		#{shipping_warehouse}		
		)
	</insert>
	
	<delete id="deletePM" parameterType="list">
		DELETE FROM TABLE_PM 
    	WHERE Product_Code IN
    <foreach item="item" collection="list" open="(" separator="," close=")">
        #{item}
    </foreach>
	</delete>
	
	<update id="modifyPM" parameterType="pmDTO">
		 UPDATE TABLE_PM SET  
        Product_Name = #{product_name}, 
        Product_Image = #{product_image}, 
        Unit = #{unit}, 
        Standard = #{standard}, 
        Lead_Time = #{lead_time}, 
        Barcode = #{barcode}, 
        Lot_Size = #{lot_size}, 
        Shipping_Warehouse = #{shipping_warehouse}
    WHERE Product_Code = #{product_code}
	</update>
	
	<select id="selectOne" parameterType="string" resultType="pmDTO">
		SELECT * FROM TABLE_PM where Product_Code = #{_parameter}
	</select>
	
	<select id="selectpm_stockPage" resultType="pm_stockDTO" parameterType="map">
		SELECT *
			FROM (
    		SELECT rownum AS rnum, 
           		Product_Code, 
           		Product_Name, 
           		Product_Image, 
           		Unit, 
           		Standard,  
           		Barcode, 
           		Lot_Size, 
           		Shipping_Warehouse,
           		Stock_Amount, 
           		Latest_Stock_Date,
           		Product_Status
    FROM (
        SELECT Product_Code, 
               Product_Name, 
               Product_Image, 
               Unit, 
               Standard, 
               Barcode, 
               Lot_Size, 
               Shipping_Warehouse,
               Stock_Amount, 
               Latest_Stock_Date,
               Product_Status
        FROM TABLE_PM_STOCK
        <where>
        	<if test="'code' == optionvalue">
        	Product_Code like '%' || #{search} || '%'
        	</if>
        	<if test="'name' == optionvalue">
        	Product_Name like '%' || #{search} || '%'
        	</if>
        </where>
        ORDER BY Product_Code
    )
)
WHERE rnum <![CDATA[ >= ]]>  #{start} AND rnum  <![CDATA[ <= ]]> #{end}
	</select>
	
	<select id="totalpm_stockPage" resultType="int">
		select count(*) cnt from TABLE_PM_STOCK
	</select>
	
	<delete id="deletePM_Stock" parameterType="list">
		DELETE FROM TABLE_PM_STOCK 
    	WHERE Product_Code IN
    <foreach item="item" collection="list" open="(" separator="," close=")">
        #{item}
    </foreach>
	</delete>
	
	<insert id="insert_PM_stock" parameterType="pmDTO">
		INSERT INTO TABLE_PM_STOCK (Product_Code, Product_Name, Product_Image, Unit, Standard, Barcode, Lot_Size, Shipping_Warehouse)
		VALUES (
		#{product_code},
		#{product_name},
		#{product_image},
		#{unit},
		#{standard},
		#{barcode},
		#{lot_size},
		#{shipping_warehouse}	
		)
	</insert>
	
</mapper>